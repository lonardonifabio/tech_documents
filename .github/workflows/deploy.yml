name: Deploy Astro site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "."

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: ${{ env.BUILD_PATH }}/package-lock.json
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.BUILD_PATH }}
        
      - name: Install system dependencies for preview generation
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libmagickwand-dev \
            imagemagick \
            ghostscript \
            libreoffice \
            poppler-utils \
            ffmpeg
      
      - name: Configure ImageMagick policy
        run: |
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/rights="none" pattern="PS"/rights="read|write" pattern="PS"/' /etc/ImageMagick-6/policy.xml
          sudo sed -i 's/rights="none" pattern="EPS"/rights="read|write" pattern="EPS"/' /etc/ImageMagick-6/policy.xml
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
        working-directory: ${{ env.BUILD_PATH }}
      
      - name: Ensure data files exist
        run: |
          python scripts/ensure_data.py
        working-directory: ${{ env.BUILD_PATH }}
      
      - name: Generate document previews
        run: |
          echo "üñºÔ∏è Generating document previews..."
          python scripts/generate_previews.py
        working-directory: ${{ env.BUILD_PATH }}
        
      - name: Build with Astro
        run: |
          npm run build
        working-directory: ${{ env.BUILD_PATH }}
        
      - name: Add .nojekyll file
        run: touch ${{ env.BUILD_PATH }}/dist/.nojekyll
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
